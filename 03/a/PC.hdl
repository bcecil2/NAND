// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
		Mux16(a=regout, b[0..15]=false, sel=reset, out=resetcheck);
		Not(in=reset, out=notreset);
		And(a=notreset, b=load, out=notresetandload);
		Mux16(a=resetcheck, b=in, sel=notresetandload, out=loadcheck);

		
		Not(in=load, out=notload);
		And(a=notload, b=notreset, out=notloadandnotreset);
		And(a=notloadandnotreset, b=inc, out=incsel);
		
		Inc16(in=loadcheck, out=inplusone);	
		Mux16(a=loadcheck, b=inplusone, sel=incsel, out=inccheck);
		
		Or(a=load, b=inc, out=or1);
		Or(a=or1, b=reset, out=o2);
		
		Register(in=inccheck, load=o2, out=regout, out=out);
}
